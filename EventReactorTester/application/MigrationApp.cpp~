/*
 * MigrationApp.cpp
 *
 *  Created on: Aug 20, 2014
 *      Author: stguser
 */

#include "MigrationApp.h"
#include <unistd.h>
#include <stdlib.h>     /* exit, EXIT_FAILURE */
MigrationApp::MigrationApp() {
	// TODO Auto-generated constructor stub

}
//void MigrationApp::userinput(){
//	//while (true){
//		cout<<"**** Would you like to check for VM migration?\n";
//		 char input[2];
//		   cin.getline( input,2 );
//		 if (input[0] =='y') {mape();}
//		 else if (input[0] =='x') exit(0);
//	//}
//}
void MigrationApp::mape(){
	while(true){
		monitoring();
		analyzing();
		cout<<"**** What's the servers state (u = underutilized; o = overloaded; n = normal)?\n";
		char input[2];
		cin.getline(input,2);
		if (input[0] =='u') planning("underutilized");
		else if (input[0] =='o') planning("overloaded");
		else if (input[0] =='n') continue;
		migrating();
	}
}
void MigrationApp::monitoring(){
	cout<<"**** Monitoring for VM migration ****\n";
	usleep(3000000);
}
void MigrationApp::analyzing(){
	cout<<"**** Analyzing for VM migration ****\n";
	usleep(3000000);
}
void MigrationApp::planning(string serverState){
	cout<<"**** Planning for VM migration ****\n";
	usleep(3000000);
}
void MigrationApp::migrating(){
	cout<<"**** Start VM migration ****\n";
	migrate();
	cout<<"**** End VM migration ****\n";
}
void MigrationApp::migrate(){

	cout<<"**** Press Enter finish simulated migration...\n";
	char input[1];
	cin.getline(input,1);

	/*virConnectPtr conn_src;
	virConnectPtr conn_dest;
	string src_con = "qemu+tcp://localhost/system";// src host
	string dest_con = "qemu+tcp://141.76.65.190/system";// dest host
    virConnectPtr conn;
    virConnectPtr conn_dest2;
	conn_src = virConnectOpenAuth(src_con.c_str(),virConnectAuthPtrDefault,0);
    //conn = virConnectOpen("qemu+tcp:///system");
    if (conn_src == NULL)
    		fprintf(stderr,
    				"ERROR: Failed to open connection to source host (%s).\n",
    				virConnectGetHostname(conn_src));
    	else
    		printf("INFO: Opened connection to source host (%s).\n",
    				virConnectGetHostname(conn_src));

//	if (conn_src == NULL)
//		fprintf(stderr,
//				"ERROR: Failed to open connection to source host (%s).\n",
//				virConnectGetHostname(conn_src));
//	else
//		printf("INFO: Opened connection to source host (%s).\n",
//				virConnectGetHostname(conn_src));


    //conn_dest2 = virConnectOpen("qemu://141.76.65.190/system");
	conn_dest = virConnectOpenAuth(dest_con.c_str(),virConnectAuthPtrDefault,0);
	if (conn_dest == NULL) {
		fprintf(stderr, "Failed to open connection to dest\n");

	}
	virDomainPtr guest;
	guest= virDomainLookupByName(conn_src, "vm2"); // vm to migrate
	virDomainMigrate(guest, conn_dest, VIR_MIGRATE_LIVE, 0, 0,
			100.0);*/

}


